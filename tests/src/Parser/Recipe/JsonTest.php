<?php
namespace RecipeSuggester\Parser\Recipe;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-05-14 at 03:17:45.
 */
class JsonTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Json
     */
    protected $parser;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->parser = new Json;
    }

    /**
     * @covers RecipeSuggester\Parser\Recipe\Json::parse
     * @expectedException \RecipeSuggester\Parser\InvalidFormatException
     */
    public function testParseInvalidJson()
    {
        $this->parser->parse('Invalid JSON');
    }

    /**
     * @covers RecipeSuggester\Parser\Recipe\Json::parse
     * @expectedException \RecipeSuggester\Parser\InvalidFormatException
     */
    public function testParseEmptyList()
    {
        $this->parser->parse('[]');
    }

    /**
     * @covers RecipeSuggester\Parser\Recipe\Json::parse
     * @expectedException \RecipeSuggester\Parser\InvalidFormatException
     */
    public function testParseNonArray()
    {
        $this->parser->parse('{"object": "hello"}');
    }

    /**
     * @covers RecipeSuggester\Parser\Recipe\Json::parse
     * @expectedException \RecipeSuggester\Parser\InvalidFormatException
     */
    public function testParseNoIngredientRecipeObject()
    {
        $json = json_encode(array(
            array(
                'name' => 'cheese sandwich'
            )
        ));

        $this->parser->parse($json);
    }

    /**
     * @covers RecipeSuggester\Parser\Recipe\Json::parse
     * @expectedException \RecipeSuggester\Parser\InvalidFormatException
     */
    public function testParseInvalidRecipeIngredientObject()
    {
        $json = json_encode(array(
            array(
                'name'        => 'cheese sandwich',
                'ingredients' => array(
                    array('foo' => 'bar')
                )
            )
        ));
        $this->parser->parse($json);
    }

    /**
     * @covers RecipeSuggester\Parser\Recipe\Json::parse
     */
    public function testParseValidRecipeObject()
    {
        $json = json_encode(array(
            array(
                'name'        => 'cheese sandwich',
                'ingredients' => array(
                    array(
                        'item'   => 'bread',
                        'amount' => 2,
                        'unit'   => 'slices'
                    )
                )
            )
        ));
        $recipes = $this->parser->parse($json);

        $this->assertEquals(1, sizeof($recipes), 'Should parse one recipe');
        $this->assertInstanceOf('\RecipeSuggester\Model\Recipe', $recipes[0]);
        $this->assertEquals('cheese sandwich', $recipes[0]->getName());
        $this->assertEquals(1, sizeof($recipes[0]->getIngredients()));
    }
}
