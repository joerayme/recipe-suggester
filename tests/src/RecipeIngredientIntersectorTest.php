<?php
namespace RecipeSuggester;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-05-14 at 02:07:43.
 */
class RecipeIngredientIntersectorTest extends \PHPUnit_Framework_TestCase
{
    public function intersectIngredientsProvider()
    {
        $breadForRecipe  = new Model\Ingredient('bread', 2, 'slices');
        $cheeseForRecipe = new Model\Ingredient('cheese', 2, 'slices');
        $saladForRecipe  = new Model\Ingredient('salad', 200, 'grams');

        $availableBread    = new Model\Ingredient('bread', 10, 'slices');
        $unavailableBread  = new Model\Ingredient('bread', 1, 'slices');
        $availableCheese   = new Model\Ingredient('cheese', 10, 'slices');
        $unavailableCheese = new Model\Ingredient('cheese', 1, 'slices');
        $availableSalad    = new Model\Ingredient('salad', 500, 'grams');
        $unavailableSalad  = new Model\Ingredient('salad', 1, 'grams');

        $cheeseSandwichRecipe = new Model\Recipe('Cheese sandwich', array(
            new Model\Ingredient('bread', 2, 'slices'),
            new Model\Ingredient('cheese', 2, 'slices')
        ));
        $saladSandwichRecipe = new Model\Recipe('Salad sandwich', array(
            new Model\Ingredient('bread', 2, 'slices'),
            new Model\Ingredient('salad', 200, 'grams')
        ));

        return array(
            array(
                array($availableBread, $availableCheese, $availableSalad),
                array($cheeseSandwichRecipe, $saladSandwichRecipe),
                array($cheeseSandwichRecipe, $saladSandwichRecipe)
            )
        );
    }

    /**
     * @dataProvider intersectIngredientsProvider
     */
    public function testIntersectIngredients(
        array $ingredients, array $recipes, array $expectedRecipes
    ) {
        $intersector = new RecipeIngredientIntersector($recipes, $ingredients);

        $this->assertEquals($expectedRecipes, $intersector->getSuitableRecipes());
    }
}
