<?php
namespace RecipeSuggester;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-05-14 at 02:07:43.
 */
class RecipeIngredientIntersectorTest extends \PHPUnit_Framework_TestCase
{
    public function getSuitableRecipesProvider()
    {
        $breadForRecipe  = new Model\Ingredient('bread', 2, 'slices');
        $cheeseForRecipe = new Model\Ingredient('cheese', 2, 'slices');
        $saladForRecipe  = new Model\Ingredient('salad', 200, 'grams');

        $tomorrow = new \DateTime('tomorrow');

        $availableBread    = new Model\Ingredient('bread', 10, 'slices', $tomorrow);
        $unavailableBread  = new Model\Ingredient('bread', 1, 'slices');
        $availableCheese   = new Model\Ingredient('cheese', 10, 'slices', $tomorrow);
        $unavailableCheese = new Model\Ingredient('cheese', 1, 'slices');
        $availableSalad    = new Model\Ingredient('salad', 500, 'grams', new \DateTime('+2 days'));
        $unavailableSalad  = new Model\Ingredient('salad', 1, 'grams');

        $cheeseSandwichRecipe = new Model\Recipe('Cheese sandwich', array(
            new Model\Ingredient('bread', 2, 'slices'),
            new Model\Ingredient('cheese', 2, 'slices')
        ));
        $saladSandwichRecipe = new Model\Recipe('Salad sandwich', array(
            new Model\Ingredient('bread', 2, 'slices'),
            new Model\Ingredient('salad', 200, 'grams')
        ));

        return array(
            array(
                array($availableBread, $availableCheese, $availableSalad),
                array($cheeseSandwichRecipe, $saladSandwichRecipe),
                array($cheeseSandwichRecipe, $saladSandwichRecipe),
                $cheeseSandwichRecipe
            ),
            array(
                array($availableBread, $availableSalad),
                array($cheeseSandwichRecipe, $saladSandwichRecipe),
                array($saladSandwichRecipe),
                $saladSandwichRecipe
            )
        );
    }

    /**
     * @dataProvider getSuitableRecipesProvider
     */
    public function testGetSuitableRecipes(
        array $ingredients, array $recipes, array $expectedRecipes, Model\Recipe $bestRecipe
    ) {
        $intersector = new RecipeIngredientIntersector($recipes, new Model\Pantry($ingredients));

        $this->assertEquals($expectedRecipes, $intersector->getSuitableRecipes());
    }

    /**
     *
     * @param array                   $ingredients
     * @param array                   $recipes
     * @param array                   $expectedRecipes
     * @param \RecipeSuggester\Recipe $bestRecipe
     *
     * @dataProvider getSuitableRecipesProvider
     */
    public function testGetBestRecipe(
        array $ingredients, array $recipes, array $expectedRecipes, Model\Recipe $bestRecipe
    ) {
        $intersector = new RecipeIngredientIntersector($recipes, new Model\Pantry($ingredients));

        $this->assertEquals($bestRecipe, $intersector->getBestRecipe());
    }
}
